{"ast":null,"code":"var _jsxFileName = \"/Users/Ryan/Documents/GitHub/CST-391/Topic 6/music3-ds/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport \"./App.css\";\nimport datasource from \"./datasource\";\nimport SearchAlbum from \"./SearchAlbum\";\nimport NavBar from './NavBar';\nimport NewAlbum from './NewAlbum';\nimport OneAlbum from './OneAlbum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchPhrase, setSearchPhrase] = useState('');\n  const [albumList, setAlbumList] = useState([]);\n  const [currentlySelectedAlbumId, setCurrentlySelectedAlbumId] = useState(0);\n  let refresh = false;\n  const loadAlbums = async () => {\n    const response = await datasource.get('/albums');\n    setAlbumList(response.data);\n  };\n  useEffect(() => {\n    loadAlbums();\n  }, [refresh]);\n  const updateSearchResults = async phrase => {\n    console.log('phrase is ' + phrase);\n    setSearchPhrase(phrase);\n  };\n  const updateSingleAlbum = (id, navigate) => {\n    console.log('Update single album = ', id);\n    console.log('Update single album = ', navigate);\n    var indexNumber = 0;\n    for (var i = 0; i < albumList.length; ++i) {\n      if (albumList[i].id === id) indexNumber = i;\n    }\n    setCurrentlySelectedAlbumId(indexNumber);\n    console.log('update path ', '/show/' + indexNumber);\n    navigate('/show/' + indexNumber);\n  };\n  console.log('albumList', albumList);\n  const renderedList = albumList.filter(album => {\n    if (album.description.toLowerCase().includes(searchPhrase.toLowerCase()) || searchPhrase === '') {\n      return true;\n    }\n    return false;\n  });\n  console.log('renderedList', renderedList);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(SearchAlbum, {\n          updateSearchResults: updateSearchResults,\n          albumList: renderedList,\n          updateSingleAlbum: updateSingleAlbum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(NewAlbum, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/show/:albumId\",\n        element: /*#__PURE__*/_jsxDEV(OneAlbum, {\n          album: albumList[currentlySelectedAlbumId]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 11\n  }, this);\n};\n_s(App, \"2BJp2o4muws8YvnFrN/bW4VWb8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","BrowserRouter","Card","SearchForm","datasource","SearchAlbum","NavBar","NewAlbum","OneAlbum","jsxDEV","_jsxDEV","App","_s","searchPhrase","setSearchPhrase","albumList","setAlbumList","currentlySelectedAlbumId","setCurrentlySelectedAlbumId","refresh","loadAlbums","response","get","data","updateSearchResults","phrase","console","log","updateSingleAlbum","id","navigate","indexNumber","i","length","renderedList","filter","album","description","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/Ryan/Documents/GitHub/CST-391/Topic 6/music3-ds/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport \"./App.css\";\nimport datasource from \"./datasource\";\nimport SearchAlbum from \"./SearchAlbum\";\nimport NavBar from './NavBar';\nimport NewAlbum from './NewAlbum';\nimport OneAlbum from './OneAlbum';\n\nconst App = () => {\n     const [searchPhrase, setSearchPhrase] = useState('');\n     const [albumList, setAlbumList] = useState([]);\n     const [currentlySelectedAlbumId, setCurrentlySelectedAlbumId] = useState(0);\n     let refresh = false;\n\n     const loadAlbums = async () => {\n          const response = await datasource.get('/albums');\n\n          setAlbumList(response.data);\n     };\n\n     useEffect(() => {\n          loadAlbums();\n     }, [refresh]);\n\n     const updateSearchResults = async (phrase) => {\n          console.log('phrase is ' + phrase);\n          setSearchPhrase(phrase);\n     };\n\n     const updateSingleAlbum = (id, navigate) => {\n          console.log('Update single album = ', id);\n          console.log('Update single album = ', navigate);\n          var indexNumber = 0;\n          for (var i = 0; i < albumList.length; ++i) {\n               if (albumList[i].id === id) indexNumber = i;\n          }\n\n          setCurrentlySelectedAlbumId(indexNumber);\n          console.log('update path ', '/show/' + indexNumber);\n          navigate('/show/' + indexNumber);\n     };\n     console.log('albumList', albumList);\n     const renderedList = albumList.filter((album) => {\n          if (\n               album.description.toLowerCase().includes(searchPhrase.toLowerCase()) || \n               searchPhrase === '' \n               ) {\n                    return true;\n               }\n               return false;\n     });\n\n     console.log('renderedList', renderedList);\n\n     return (\n          <BrowserRouter>\n          <NavBar />\n          <Routes>\n               <Route exact path='/'\n               element={\n                    <SearchAlbum\n                    updateSearchResults={updateSearchResults}\n                    albumList={renderedList}\n                    updateSingleAlbum={updateSingleAlbum}\n                    />\n               }\n               />\n               <Route exact path='/new' element={<NewAlbum />} />\n               <Route\n               exact path='/show/:albumId'\n               element={<OneAlbum album={albumList[currentlySelectedAlbumId]} />}\n               />\n          </Routes>\n          </BrowserRouter>\n     );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}